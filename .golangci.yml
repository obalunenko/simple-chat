linters:
  enable-all: true
  disable:
    - gochecknoglobals

linters-settings:
  errcheck:

  gofmt:
    # simplify code: gofmt with `-s` option, true by default
    simplify: true
  govet:
    check-shadowing: true
  golint:
    min-confidence: 0
  gocyclo:
    min-complexity: 10
  maligned:
    suggest-new: true
  dupl:
    threshold: 100
  goconst:
    min-len: 2
    min-occurrences: 2
  misspell:
    locale: US
  lll:
    line-length: 140
  goimports:
    local-prefixes: github.com/oleg-balunenko/simple-chat
  unparam:
    # call graph construction algorithm (cha, rta). In general, use cha for libraries,
    # and rta for programs with main packages. Default is cha.
    algo: cha
    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false
  prealloc:
    # XXX: we don't recommend using this linter before doing performance profiling.
    # For most programs usage of prealloc will be a premature optimization.

    # Report preallocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.
    # True by default.
    simple: true
    range-loops: true # Report preallocation suggestions on range loops, true by default
    for-loops: false # Report preallocation suggestions on for loops, false by default
  gocritic:
    # which checks should be enabled; can't be combined with 'disabled-checks';
    # default are: [appendAssign assignOp caseOrder dupArg dupBranchBody dupCase flagDeref
    # ifElseChain regexpMust singleCaseSwitch sloppyLen switchTrue typeSwitchVar underef
    # unlambda unslice rangeValCopy defaultCaseOrder];
    # all checks list: https://github.com/go-critic/checkers
    enabled-checks:
      - docStub
      - rangeValCopy
      - yodaStyleExpr
      - appendAssign
      - appendCombine
      - caseOrder
      - badCond
      - commentedOutCode
      - commentFormatting
      - commentedOutImport
      - dupArg
      - dupBranchBody
      - elseif
      - emptyStringTest
      - indexAlloc
      - initClause
      - captlocal
    settings: # settings passed to gocritic
      captLocal: # must be valid enabled check name
        checkLocals: true
      rangeValCopy:
        sizeThreshold: 32


run:
  skip-dirs:
    - vendor/
